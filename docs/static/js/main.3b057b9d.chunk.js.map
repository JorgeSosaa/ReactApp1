{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OAEH,sBAAMC,SAnBiB,SAACC,GAEnBA,EAAEC,iBAEHJ,EAAWK,OAAOC,OAAO,IAEzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAYlB,SACY,uBACAO,KAAM,OACNC,MAAST,EACTU,SA7BiB,SAACP,GAG1BF,EAAeE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,0DAE+BC,UAAUH,GAFzC,sDAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXhB,kBAehBM,GAfgB,4CAAH,sDCHRO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAY,0CAAjB,UACC,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,kCAAKA,EAAL,WCHIO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAKvB,ECJyB,SAACA,GAEzB,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAwBE,OAjBAC,qBAAU,WAEPxB,EAAQC,GACPwB,MAAK,SAAAd,GAGFY,EAAS,CACNf,KAAMG,EACNU,SAAS,SAIhB,CAACpB,IAKGqB,EDtBcI,CAAazB,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAId,OAGE,qCACE,oBAAIJ,UAAY,oCAAhB,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAY,wCAAf,sBAId,qBAAKA,UAAU,YAAf,SACKT,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aElBnBe,EAAe,WAG5B,MAAmCxC,mBAAS,CAAC,cAA7C,mBAAOyC,EAAP,KAAkB1C,EAAlB,KAeI,OACI,qCACE,8CACA,cAAC,EAAD,CAAcA,cAAgBA,IAE9B,uBAGA,6BAGS0C,EAAWlB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MC9B9B4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.3b057b9d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n   const [inputValue, setInputValue] = useState('');\r\n   const hanledInputChange = (e)=> {\r\n\r\n   \r\n    setInputValue (e.target.value);\r\n   } \r\n\r\n   const handleSumit = (e)=>{\r\n\r\n     e.preventDefault(); // Para prevenir el comportamiento por defecto del Formulario.\r\n\r\nif (inputValue.trim().length>2){\r\n\r\n    setCategories(cats=> [ inputValue, ...cats]);\r\n    setInputValue('');\r\n}\r\n\r\n\r\n   \r\n\r\n   }\r\n    \r\n   \r\n   \r\n   return (\r\n\r\n<form onSubmit= {handleSumit} >\r\n            <input\r\n            type= \"text\"\r\n            value = {inputValue}\r\n            onChange = {hanledInputChange}\r\n            /> \r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n\r\n\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\n\r\n export const getGifs = async (category) => {\r\n  const url =\r\n    `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=sPPrUsDtRQIL2TLVny9P4lCbvlWnb720`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n return gifs;\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n//console.log(id, title, url);\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn \">\r\n         <img src = {url} alt = {title} />\r\n         <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n//import { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  //const [images, setImages] = useState([]);\r\n\r\n  \r\n   const {data, loading} = useFetchGifs(category);\r\n \r\n\r\n\r\n  return (\r\n\r\n\r\n    <>\r\n      <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\r\n      \r\n      {loading && <p className = \"card animate__animated animate__flash\"> Loading</p> }\r\n   \r\n\r\n\r\n    <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n\r\n\r\n        );\r\n\r\n     \r\n\r\n};\r\n","\r\n\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    }); \r\n\r\n\r\n      useEffect(() => {\r\n\r\n         getGifs(category) \r\n         .then(img => {\r\n\r\n           \r\n             setstate({\r\n                data: img,\r\n                loading: false\r\n             })\r\n       \r\n            })\r\n      }, [category])\r\n      \r\n     \r\n\r\n\r\n      return state;\r\n      \r\n\r\n    }\r\n\r\n      ","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  \r\nconst [categories,setCategories] = useState(['One Punch']);\r\n    \r\n//const handleAdd =  ()=>{\r\n\r\n//setCategories ([...categories, 'LALAXLALA']);\r\n\r\n//setCategories (cats=> [...cats, 'lalahunter']);\r\n\r\n\r\n//}\r\n\r\n \r\n\r\n\r\n  \r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <AddCategory  setCategories ={setCategories}/>\r\n\r\n          <hr/>\r\n  \r\n\r\n          <ol>\r\n                {\r\n\r\n                   categories.map(category =>(\r\n\r\n                       <GifGrid \r\n                       key = {category}\r\n                       category = {category} /> \r\n\r\n                   ))\r\n                   }\r\n           \r\n\r\n         </ol>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}